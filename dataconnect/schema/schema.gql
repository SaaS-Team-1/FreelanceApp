type User 
  @table{
  id: UUID! @col(name: "user_auth") @default(expr: "uuidV4()")
  username: String!
  name: String!
  bio: String!
}

type Language 
  @table(
    name: "Languages", 
    singular: "Language", 
    plural: "Languages")
    {
  id: UUID! @col(name: "id") @default(expr: "uuidV4()")
  languageName: String!
  user: User! @ref
}

type Gig 
  @table(
    name: "Gigs", 
    singular: "Gig", 
    plural: "Gigs")
    {
  id: UUID! @col(name: "id") @default(expr: "uuidV4()")
  user: User @ref
  title: String!
  description: String!
  price: Int
  createdAt: Timestamp @default(expr: "request.time")
  updatedAt: Timestamp
  status: String!
  rating: Rating @ref
}

type Transaction 
  @table(
    name: "Transactions", 
    singular: "Transaction", 
    plural: "Transactions")
  {
  id: UUID! @col(name: "id") @default(expr: "uuidV4()")
  sender: User! @ref
  receiver: User! @ref
  gig: Gig! @ref
  transactionDate: Timestamp
  transactionTime: Timestamp
  amount: Int
}

type Message 
  @table(
    name: "Messages", 
    singular: "Message", 
    plural: "Messages"){
  id: UUID! @col(name: "id") @default(expr: "uuidV4()")
  sender: User! @ref
  receiver: User! @ref
  textContent: String
  createdAt: Timestamp
}

type Category 
  @table(
    name: "Categories", 
    singular: "Category", 
    plural: "Categories"){
  id: UUID! @col(name: "id") @default(expr: "uuidV4()")
  categoryName: String!
  gig: Gig @ref 
  user: User @ref
}

type Rating 
  @table(
    name: "Rating", 
    singular: "Rating", 
    plural: "Ratings", 
    key: "id") 
  {
  id: UUID! @col(name: "id") @default(expr: "uuidV4()")
  user: User! @ref
  gig: Gig! @ref
  ratingValue: Int
  createdAt: Timestamp
}

type Application 
  @table(
    name: "Applications", 
    singular: "Application", 
    plural: "Applications", 
    key: ["user", "gig"])
    {
  id: UUID! @col(name: "id") @default(expr: "uuidV4()")
  user: User! @ref
  gig: Gig! @ref
  status: String!
  createdAt: Timestamp
}


# # Movies
# type Movie @table {
#   # The below parameter values are generated by default with @table, and can be edited manually.
#   # implies directive `@col(name: "movie_id")`, generating a column name
#   id: UUID! @default(expr: "uuidV4()")
#   title: String!
#   imageUrl: String!
#   genre: String
   
# }

# # Movie Metadata
# # Movie - MovieMetadata is a one-to-one relationship
# type MovieMetadata @table {
#   # @unique indicates a 1-1 relationship
#   movie: Movie! @unique 
#   # movieId: UUID <- this is created by the above reference
#   rating: Float
#   releaseYear: Int
#   description: String
# }

# # Reviews
# type Review @table(name: "Reviews", key: ["movie", "user"]) {
#   id: UUID! @default(expr: "uuidV4()")
#   user: User!
#   movie: Movie!
#   rating: Int
#   reviewText: String
#   reviewDate: Date! @default(expr: "request.time")
# }